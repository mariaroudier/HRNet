{"ast":null,"code":"import { configureStore, combineReducers, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { employeesStateReducer } from \"./employeeSlice\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst rootReducer = combineReducers({\n  employees: employeesStateReducer\n});\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","getDefaultMiddleware","employeesStateReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","rootReducer","employees","persistConfig","key","persistedReducer","store","reducer","middleware","serializableCheck","ignoreActions","persistor"],"sources":["/Users/mariavolokh/Documents/Project progr/14_Project/my-app/src/redux/store.js"],"sourcesContent":["import { configureStore, combineReducers, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { employeesStateReducer } from \"./employeeSlice\";\nimport {\n      persistStore,\n      persistReducer,\n      FLUSH,\n      REHYDRATE,\n      PAUSE,\n      PERSIST,\n      PURGE,\n      REGISTER,\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\n\nconst rootReducer = combineReducers({\n      employees: employeesStateReducer\n})\n\nconst persistConfig = {\n      key: 'root',\n      storage\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n      reducer: persistedReducer,\n      middleware: (getDefaultMiddleware) =>\n            getDefaultMiddleware({\n                  serializableCheck: {\n                        ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n                  },\n            }),\n\n});\n\nexport const persistor = persistStore(store)"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,EAAEC,oBAAoB,QAAQ,kBAAkB;AACxF,SAASC,qBAAqB,QAAQ,iBAAiB;AACvD,SACMC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACP,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAG/C,MAAMC,WAAW,GAAGZ,eAAe,CAAC;EAC9Ba,SAAS,EAAEX;AACjB,CAAC,CAAC;AAEF,MAAMY,aAAa,GAAG;EAChBC,GAAG,EAAE,MAAM;EACXJ;AACN,CAAC;AAED,MAAMK,gBAAgB,GAAGZ,cAAc,CAACU,aAAa,EAAEF,WAAW,CAAC;AAEnE,OAAO,MAAMK,KAAK,GAAGlB,cAAc,CAAC;EAC9BmB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGlB,oBAAoB,IAC3BA,oBAAoB,CAAC;IACfmB,iBAAiB,EAAE;MACbC,aAAa,EAAE,CAAChB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACvE;EACN,CAAC;AAEb,CAAC,CAAC;AAEF,OAAO,MAAMY,SAAS,GAAGnB,YAAY,CAACc,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}